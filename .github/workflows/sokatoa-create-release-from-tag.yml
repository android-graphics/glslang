name: Sokatoa create release from tag

permissions:
  contents: write
  
on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag'
        default: 'vulkan-sdk-1.3.275.0'
        required: true
        type: string

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-20.04
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.event.inputs.RELEASE_TAG }}
          tag_name: ${{ github.event.inputs.RELEASE_TAG }}
          draft: false
          prerelease: false
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    name: ${{ matrix.os }}
    needs: create_release
    strategy:
      fail-fast: false
      matrix:
        # free runners
        os: [windows-2019, ubuntu-20.04, macos-12]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.RELEASE_TAG }}

      - name: Build
        shell: bash
        run: |
          python update_glslang_sources.py
          mkdir build
          cd build
          cmake ../ -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=./install
          cmake --build . --config Release --target install -j 12

      - name: Archive results
        if: runner.os != 'Windows'
        shell: bash
        run: |
          mkdir ${{ github.event.inputs.RELEASE_TAG }}
          cp build/install/bin/glslang ${{ github.event.inputs.RELEASE_TAG }}
          cp build/install/bin/glslangValidator ${{ github.event.inputs.RELEASE_TAG }}
          tar -czvf ${{ github.event.inputs.RELEASE_TAG }}_${{ runner.os }}.tar.gz -C ${{ github.event.inputs.RELEASE_TAG }} `ls -A ${{ github.event.inputs.RELEASE_TAG }}`

      - name: Archive results
        if: runner.os == 'Windows'
        shell: bash
        run: |
          mkdir ${{ github.event.inputs.RELEASE_TAG }}
          cp build/install/bin/glslang.exe ${{ github.event.inputs.RELEASE_TAG }}
          cp build/install/bin/glslangValidator.exe ${{ github.event.inputs.RELEASE_TAG }}
          7z a -r ${{ github.event.inputs.RELEASE_TAG }}.zip ./${{ github.event.inputs.RELEASE_TAG }}/*

      - name: Upload artifacts
        if: runner.os != 'Windows'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.RELEASE_TAG }}
          files: ${{ github.event.inputs.RELEASE_TAG }}_${{ runner.os }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        if: runner.os == 'Windows'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.RELEASE_TAG }}
          files: ${{ github.event.inputs.RELEASE_TAG }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
